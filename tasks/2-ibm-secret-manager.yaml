apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: ibm-secret-manager
spec:
  params:
    - name: secret-name
      description: Provide the name for the secrets that is to be created
    - name: base-url
      description: Provide the base url to access the Secret manager service. You can retrieve as part of the endpoint of the Secret Manager Service
    - name: secret-type
      description: The secret type. Allowable values [arbitrary, username_password, iam_credentials]
    - name: secret-id
      description: The Secret Key ID (UUID) for your secret that is generated during the creation of the secret
    - name: tools-image
      default: garagecatalyst/ibmcloud-dev:1.1.3
    - name: source-dir
      default: /source
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - name: source
        mountPath: $(params.source-dir)
  steps:
    - name: secret-mgr
      image: $(params.tools-image)
      workingdir: $(params.source-dir)
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: APIKEY
          valueFrom:
            secretKeyRef:
              name: ibmcloud-apikey
              key: APIKEY
              optional: true          
      script: |
        #!/usr/bin/env bash
        set -ex
        
        
        echo "Starting the process to retrieve data from Secret Manager"
              
        echo "assiging parameter"
        # SECRET_NAME="$(params.secret-name)"
        # BASE_URL="$(params.base-url)"
        # SECRET_TYPE="$(params.secret-type)"
        # SECRET_ID="$(params.secret-id)"
        # SECRET_NAME="app-secure-credentials"


        SECRET_NAME="mysecret"
        BASE_URL="https://1fc18efc-2684-4087-81ca-021dcbcd6cab.us-south.secrets-manager.appdomain.cloud"
        SECRET_TYPE="username_password"
        SECRET_ID="e422ef53-d198-42bb-8c4a-44bd76eb4910"

        echo "Retrieving the IBM TOKEN"
        
        TEMP_TOKEN=$(curl -k -X POST \
                    --header "Content-Type: application/x-www-form-urlencoded" \
                    --header "Accept: application/json" \
                    --data-urlencode "grant_type=urn:ibm:params:oauth:grant-type:apikey" \
                    --data-urlencode "apikey=${APIKEY}" \
                    "https://iam.cloud.ibm.com/identity/token" | jq .access_token);

        IAM_TOKEN="Bearer "${TEMP_TOKEN:1:${#TEMP_TOKEN}-2}  

        # IAM_TOKEN=$(ibmcloud iam oauth-tokens | grep "IAM token:")
        # IAM_TOKEN=${IAM_TOKEN:11}
        #echo "IAM_TOKEN is "${IAM_TOKEN}

        echo "Retrieving the USER Credentials from the IBM Secret Manager Service"

        # Command below to connect the service manager to retrieve the secrets
        # curl -X GET -H "Authorization: ${IAM_TOKEN}" -H "Accept: application/json" "${BASE_URL}/api/v1/secrets/${SECRET_TYPE}/${SECRET_ID}"
        USER_NAME=$(curl -X GET -H "Authorization: ${IAM_TOKEN}" -H "Accept: application/json" "${BASE_URL}/api/v1/secrets/${SECRET_TYPE}/${SECRET_ID}" | jq .resources[].secret_data.username)
        PASSWORD=$(curl -X GET -H "Authorization: ${IAM_TOKEN}" -H "Accept: application/json" "${BASE_URL}/api/v1/secrets/${SECRET_TYPE}/${SECRET_ID}" | jq .resources[].secret_data.password)
        
        USER_NAME=${USER_NAME:1:${#USER_NAME}-2}
        PASSWORD=${PASSWORD:1:${#PASSWORD}-2}
        
        set +e
        echo "Creating the secrets in the IBM Openshift Cluster"
        TEMP_NAME=$(oc get secret -n ${NAMESPACE} ${SECRET_NAME})
        set -e

        if [[ "${TEMP_NAME}" == "null" ]] || [[ -z  "${TEMP_NAME}" ]]; then 
            oc create secret generic ${SECRET_NAME} -n ${NAMESPACE} --from-literal=username=${USER_NAME} \
                                      --from-literal=password=${PASSWORD}
        fi

        echo "Extracted..."
        
      